% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Encode.R
\name{encode}
\alias{encode}
\alias{encode.sf}
\alias{encode.sfc}
\alias{encode.numeric}
\title{Encode}
\usage{
encode(obj, ...)

\method{encode}{sf}(obj, strip = FALSE, ...)

\method{encode}{sfc}(obj, strip = FALSE, ...)

\method{encode}{numeric}(obj = NA, ..., lon, lat)
}
\arguments{
\item{obj}{object}

\item{...}{other parameters passed to methods}

\item{strip}{(optional) logical indicating if \code{sf} attributes should be stripped. 
Useful if the object contains only one type of geometry and you want to reduce the size
even further}

\item{lon}{(optional) vector of longitudes}

\item{lat}{(optional) vector of latitudes}
}
\value{
encoded object
}
\description{
Encodes coordinates into an encoded polyline
}
\details{
Will work with
\itemize{
  \item{\code{sf} and \code{sfc} objects}
  \item{\code{data.frames}} - It will attempt to find lat & lon coordinates, 
  or you can explicitely define them using the \code{lat} and \code{lon} arguments
  \item{latitude and longitude coordinate vectors}
}
}
\examples{
\dontrun{

## sf objects
library(sf)
nc <- sf::st_read(system.file("shape/nc.shp", package="sf"))

encoded <- encode(nc)

## strip attributes
encodedLite <- encode(nc, strip = TRUE)

## data.frame
df <- data.frame(polygonId = c(1,1,1,1),
  lineId = c(1,1,1,1),
  lon = c(-80.190, -66.118, -64.757, -80.190),
  lat = c(26.774, 18.466, 32.321, 26.774))
  
## on a data.frame, it will attemp to find the lon & lat columns
encode(df)
  
## Grouping by polygons and lines
df <- data.frame(polygonId = c(1,1,1,1,1,1,1,1,2,2,2,2),
  lineId = c(1,1,1,1,2,2,2,2,1,1,1,1),
  lon = c(-80.190, -66.118, -64.757, -80.190,  -70.579, -67.514, -66.668, -70.579, 
  -70, -49, -51, -70),
  lat = c(26.774, 18.466, 32.321, 26.774, 28.745, 29.570, 27.339, 28.745, 
  22, 23, 22, 22))


## using dplyr groups   

library(dplyr)   
df \%>\%
  group_by(polygonId, lineId) \%>\% 
  summarise(polyline = encode(lon, lat))
  
## using data.table
library(data.table)
setDT(df)
df[, encode(lon = lon, lat = lat), by = .(polygonId, lineId)]
  
}

}
